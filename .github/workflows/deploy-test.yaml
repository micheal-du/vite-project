# 该工作流用于构建并部署静态站点
name: Build and Deploy Static Site test build

on:
  push:
    branches:
      - main  # 仅在 main 分支有 push 时触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # 选择运行环境为最新的 Ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # 第一步：检出代码到 runner

      - name: Set up Node.js
        uses: actions/setup-node@v4  # 第二步：设置 Node.js 环境
        with:
          node-version: 18  # 指定 Node.js 版本为 18

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm i  # 第三步：安装依赖

      - name: Build project
        run: npm run build:test  # 第四步：构建项目，生成 dist 目录

      - name: Upload dist to server via SCP
        uses: appleboy/scp-action@v0.1.4  # 第五步：通过 SCP 上传 dist 文件到服务器
        with:
          host: ${{ secrets.SERVER_IP }}  # 服务器 IP，从 GitHub Secrets 获取
          username: ${{ secrets.SERVER_USER }}  # 服务器用户名，从 GitHub Secrets 获取
          key: ${{ secrets.SERVER_SSH_KEY }}  # SSH 私钥，从 GitHub Secrets 获取
          port: 22  # 服务器 SSH 端口
          source: "dist/*"  # 要上传的本地文件或目录
          target: "/home/projectA"  # 服务器目标路径

      - name: Restart nginx on server
        uses: appleboy/ssh-action@v1.0.0  # 第六步：通过 SSH 重启服务器上的 nginx 服务
        with:
          host: ${{ secrets.SERVER_IP }}  # 服务器 IP，从 GitHub Secrets 获取
          username: ${{ secrets.SERVER_USER }}  # 服务器用户名，从 GitHub Secrets 获取
          key: ${{ secrets.SERVER_SSH_KEY }}  # SSH 私钥，从 GitHub Secrets 获取
          port: 22  # 服务器 SSH 端口
          script: sudo systemctl restart nginx  # 远程执行 nginx 重启命令
